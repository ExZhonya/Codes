import random

defaultEnemyAction = 10
battleTurn = "Player"
enemyrealHP = 100
enemyrealdamage = 1
youWinvalue = 0
youLosevalue = 0
playerrealHP = 100
playerDmg = 5

def clearscreen(): # Clears the screen 
    print("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n")
    pass

def clearscreen(): # Clears the screen 
    print("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n")
    pass

def playerBlock(): # Partly made, need further fix for the print output
    global playerrealHP
    blockValue = random.randint(1, 15)  # Random block value
    print(f"\nYou blocked {blockValue} damage.")
    
    # Simulate the enemy's attack damage
    enemyDamage = random.randint(1, 15)
    
    damageTaken = max(0, enemyDamage - blockValue)
    print(f"You took {damageTaken} damage after blocking.")
    
    playerrealHP -= damageTaken

def playerDodge():
    global playerrealHP
    
    playerdodgechance = random.randint(1, 15)
    
    if playerdodgechance > 10:
        print("\nYou successfully dodged the attack!")
    else:
        enemydamage = random.randint(1, 15)  # Enemy deals damage
        playerrealHP -= enemydamage
        print(f"\nYou failed to dodge and took {enemydamage} damage.")


def playerFlee(): # Not yet made, but a function when player chooses to flee
    pass

def playerFight(): # A function when player chooses to attack
    global enemyrealHP # Replaces the global enemyrealHP on the top of the code.
    global playerDmg    # Replaces the value of the playerDmg on the top of the code.
    playerDmg = random.randint(1, 15)
    enemyrealHP = enemyrealHP - playerDmg

def playerStatus(): # A function to display player's HP
    print(" ")
    print(f"You have {playerrealHP} HP left.")

def enemyResponse(): # Occurs anytime, but placed after the player does a move 
    global enemyrealHP # Overwrites the current enemyrealHP 
    global playerrealHP # Overwrites the current playerrealHP
    enemyChoice = 3 # random.randint(1,4) a comment for now since I'm testing the dodge function
    
    if enemyChoice == 1:
        enemydamage = random.randint(1,15)
        print(f"\nYou took {enemydamage} from the Spider.")
        playerrealHP = playerrealHP - enemydamage

    if enemyChoice == 2:
        enemyBlock = random.randint(1,15)
        print(f"\nThe Spider blocked {enemyBlock} dmg.")
        playerrealHP = playerrealHP - enemydamage

    if enemyChoice == 3:
        enemyDodgeChance = random.randint(1,15)
        if enemyDodgeChance >10:
            enemyrealHP = enemyrealHP + playerDmg
            print("\nThe Spider dodged and took no dmg.")
        elif enemyDodgeChance <10:
            print(f"\nThe Spider tried to dodge, but failed, took {playerDmg}.")

    if enemyChoice == 4:
        enemydamage = random.randint(1,15)
        print(f"\nYou took {enemydamage} from the Spider.")
        playerrealHP = playerrealHP - enemydamage

    if enemyrealHP > 100:
        enemyrealHP = 100

def playercheck(): # Checks if the player's HP is 0
    global youLosevalue
    if playerrealHP <= 0:
        youLosevalue = 1

def enemycheck(): # Checks if the enemy's HP is 0
    global youWinvalue
    if enemyrealHP <= 0:
        youWinvalue = 1

while True: # Creates an infinite loop for the game until you or the enemy wins
    enemycheck()
    if youWinvalue == 1: 
        clearscreen()
        print("You Win!!!")
        break
    playercheck()
    if youLosevalue == 1:
        clearscreen()
        print("You Died! Try Again!!")
        break 

    # Text Visual
    print(f"Enemy: Spider")
    print(f"HP: {enemyrealHP} AP: {defaultEnemyAction}")
    playerStatus()  # Show the player's HP after the enemy's status
    print(f"\n{battleTurn}'s turn:")
    print(f"[1]attack [2]block [3]dodge [4]flee ")
    playerChoice = input("What's your move? ")
    
    # Player Inputs 
    if playerChoice == "1":
        clearscreen()
        playerFight()
        enemyResponse()
    elif playerChoice == "2":
        clearscreen()
        playerBlock()
        enemyResponse()
    elif playerChoice == "3":
        clearscreen()
        playerDodge()
        enemyResponse()
    elif playerChoice == "4":
        print(" ")
        print("You Have Fled")
        break


def playerDodge(): # Not yet made, but a function when player chooses to dodge
    pass

def playerFlee(): # Not yet made, but a function when player chooses to flee
    pass

def playerFight(): # A function when player chooses to attack
    global enemyrealHP # Replaces the global enemyrealHP on the top of the code.
    global playerDmg    # Replaces the value of the playerDmg on the top of the code.
    playerDmg = random.randint(1, 15)
    enemyrealHP = enemyrealHP - playerDmg

def playerStatus(): # A function to display player's HP
    print(" ")
    print(f"You have {playerrealHP} HP left.")

def enemyResponse(): # Occurs anytime, but placed after the player does a move 
    global enemyrealHP # Overwrites the current enemyrealHP 
    global playerrealHP # Overwrites the current playerrealHP
    enemyChoice = 4 # random.randint(1,4) a comment for now since I'm testing the dodge function
    
    if enemyChoice == 1:
        enemydamage = random.randint(1,15)
        print(f"\nYou took {enemydamage} from the Spider.")
        playerrealHP = playerrealHP - enemydamage

    if enemyChoice == 2:
        enemyBlock = random.randint(1,15)
        print(f"\nThe Spider blocked {enemyBlock} dmg.")
        playerrealHP = playerrealHP - enemydamage

    if enemyChoice == 3:
        enemyDodgeChance = random.randint(1,15)
        if enemyDodgeChance >10:
            enemyrealHP = enemyrealHP + playerDmg
            print("\nThe Spider dodged and took no dmg.")
        elif enemyDodgeChance <10:
            print(f"\nThe Spider tried to dodge, but failed, took {playerDmg}.")

    if enemyChoice == 4:
        enemydamage = random.randint(1,15)
        print(f"\nYou took {enemydamage} from the Spider.")
        playerrealHP = playerrealHP - enemydamage

def playercheck(): # Checks if the player's HP is 0
    global youLosevalue
    if playerrealHP <= 0:
        youLosevalue = 1

def enemycheck(): # Checks if the enemy's HP is 0
    global youWinvalue
    if enemyrealHP <= 0:
        youWinvalue = 1

while True: # Creates an infinite loop for the game until you or the enemy wins
    enemycheck()
    if youWinvalue == 1: 
        clearscreen()
        print("You Win!!!")
        break
    playercheck()
    if youLosevalue == 1:
        clearscreen()
        print("You Died! Try Again!!")
        break 

    # Text Visual
    print(f"Enemy: Spider")
    print(f"HP: {enemyrealHP} AP: {defaultEnemyAction}")
    playerStatus()  # Show the player's HP after the enemy's status
    print(f"\n{battleTurn}'s turn:")
    print(f"[1]attack [2]block [3]dodge [4]flee ")
    playerChoice = input("What's your move? ")
    
    # Player Inputs 
    if playerChoice == "1":
        clearscreen()
        playerFight()
        enemyResponse()
    elif playerChoice == "2":
        clearscreen()
        playerBlock()
        enemyResponse()
    elif playerChoice == "3":
        clearscreen()
        playerDodge()
        enemyResponse()
    elif playerChoice == "4":
        print(" ")
        print("You Have Fled")
        break
